name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  R-CMD-check:
    runs-on: ubuntu-latest

    env:
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_DB: ${{ secrets.PG_DB }}
      PG_SCHEMA: ${{ secrets.PG_SCHEMA }}
      user_login: ${{ secrets.USER_LOGIN }}

    steps:
      - name: Check env variables
        run: |
          echo "PG_HOST is set to: ${PG_HOST:+[value exists]}"
          echo "PG_USER is set to: ${PG_USER:+[value exists]}"
          echo "PG_PASSWORD is set to: ${PG_PASSWORD:+[value exists]}"
          echo "PG_DB is set to: ${PG_DB:+[value exists]}"
          echo "PG_SCHEMA is set to: ${PG_SCHEMA:+[value exists]}"
          echo "user_login is set to: ${user_login:+[value exists]}"

      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: "4.4.3"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libpq-dev

      - name: Install R dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::devtools
            any::testthat
          needs: testthat

      - name: Debug - List files and check renv.lock
        run: |
          echo "Checking if renv.lock exists:"
          ls -l
          cat renv.lock || echo "renv.lock not found"

      - name: Restore renv environment
        run: |
          install.packages("renv")
          # setwd("your/project/folder")  # Uncomment and edit if renv.lock is not in root
          renv::restore()
        shell: Rscript {0}

      - name: Check
        uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual", "--compact-vignettes=gs+qpdf")'
